{
  "swagger": "2.0",
  "info": {
    "title": "Microsoft.HpcWorkbench",
    "description": "Microsoft.HpcWorkbench resource provider OpenAPI Spec",
    "version": "2021-03-01-preview"
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}": {
      "put": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/{actionName}": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/AccessProfileMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/accessProfiles/{grandchildResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "AccessProfile"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}": {
      "put": {
        "tags": [
          "Chamber"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Chamber"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "Chamber"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "Chamber"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "Chamber"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/{actionName}": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "Chamber"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}": {
      "put": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/{actionName}": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ChamberLicenseMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/chamberLicenses/{grandchildResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "ChamberLicenses"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}": {
      "put": {
        "tags": [
          "Consortium"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Consortium"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "Consortium"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "Consortium"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "Consortium"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/{actionName}": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/ConsortiumMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/consortiums/{childResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "Consortium"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}": {
      "put": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/{actionName}": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/DataFileRequestMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/files/{grandchildResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "DataFileRequest"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}": {
      "put": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/{actionName}": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SdwInstanceMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "SdwInstances"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}": {
      "put": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/{actionName}": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/SharedStorageMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/sharedStorages/{childResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "SharedStorage"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceCreationValidate": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationValidate trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationvalidate.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}": {
      "put": {
        "tags": [
          "Workload"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationBegin trigger.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcecreationbegin\r\n<br />\r\nValidation is NOT performed in this method due to the call flow - RPaaS will have gone through the OnResourceCreationValidate method.\r\n<br />\r\nFor long running resource creation, we will need the resource type created by this method to follow this pre-requisite (in resource type registration):\r\nhttps://armwiki.azurewebsites.net/rpaas/prereq_async.html\r\n<br />\r\nand\r\nthe actual integration work required to enable long running async operation:\r\nhttps://armwiki.azurewebsites.net/rpaas/async.html.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Workload"
        ],
        "summary": "Deletes a resource. Resource types can be nested and, if so, must follow the Resource API guidelines.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceCreationCompleted": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "Method that gets called if subscribed for ResourceCreationComplete trigger.",
        "description": "ResourceCreationCompleted\r\nThis extension can be leveraged to perform some operation after a successful or failed create.In case of success, the UserRP may want to start emitting billing usage.In case of failure, the UserRP may want to perform some clean up on its side.\r\nPOST\r\n https://{endpoint}/subscriptions/{subscriptionId}/resourceGroups/{rgName}/providers/{providerNamespace}/{resourceType}/{resourceName}/resourceCreationCompleted\r\nRequest Body\r\n      The entire request body for the created resource will be passed on to the UserRP\r\n            \r\nResponse\r\n      Meta RP does not expect any response body, and both http status code and response body will be ignored.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceReadValidate": {
      "get": {
        "tags": [
          "Workload"
        ],
        "summary": "For SDW Resources, this extensions allows for verification of the data contained within MetaRP is correct with respect to the real provisioning.",
        "description": "from RPaaS Docs: This extension can be used to validate whether the resource data in Meta RP store is accurate or not. RP endpoint will be sent the payload in the POST call as described below and RP can return success or failure.\r\nhttps://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcereadvalidate.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceReadBegin": {
      "get": {
        "tags": [
          "Workload"
        ],
        "summary": "Extension that provides our UserRP the ability to return the shape of data that we would like.",
        "description": "Request Body\r\n       The current resource object will be passed on to the RP endpoint.\r\n            \r\nResponse\r\n       The response includes an HTTP status code, a set of response headers, and a response body\r\n            \r\nStatus Code\r\nThe resource provider MUST return 200 (OK) to indicate that the operation completed successfully synchronously.\r\n<br />\r\n    4XX and 5XX responses will be forwarded to ARM.\r\nResponse Body\r\n    The response body should contain at least the original request that was set to RP endpoint.The whole payload will be returned to customers.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AzureResource`1"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourcePatchValidate": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "Validates a resource patch request.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchvalidate.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourcePatchBegin": {
      "patch": {
        "tags": [
          "Workload"
        ],
        "summary": "Handles resource patch requests.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchbegin\r\n            \r\nThe request body can contain one to many of the properties present in the normal resource definition.\r\nThe entire request body will be passed on to the RP endpoint without any modification after swagger validation. Of note, just like for PUT resource, a user can not change the location, type or name of their resource with a PATCH call. These fields are immutable.\r\n            \r\nPatch Strategy\r\n            \r\nWhen resource providers return a successful response(200 or 202), top level properties, such as tags, will be replaced if resources providers return any in response.The properties in \"properties\" of response body will be used to patch the existing resource(Including the InternalMetaData). The default patch strategy is JSON Merge Patch\r\n            \r\n      If the existing resource contains the property, the value is replaced.\r\n      If not, the properties are added.\r\n      For arrays, the behavior would be to replace the entire array.\r\n      Null values indicate the removal of properties in the existing resource. (Note: Currently, this is not supported as Azure clients and sdk will remove null value properties before sending requests.)\r\nThe JSON Merge Patch header(Content-Type: application/merge-patch+json) will be honored by RPaaS but other RPs can choose to ignore it.\r\nFor example, current resource is\r\n            \r\n{\r\n  \"name\": \"resource1\",\r\n  \"type\": \"ResourceProviderTestHost/TestResourceType\",\r\n  \"properties\": {\r\n    \"propertyDeployment\": \"myDeployment\",\r\n    \"propertyString\": \"secureString\",\r\n    \"zones\": [\"westUS\", \"eastUS\"]\r\n    }\r\n}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourcePatchCompleted": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful or failed patch.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepatchcompleted.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/{actionName}": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "Actions can be performed on objects. This extension can be leveraged to perform some resource actions.",
        "description": "https://armwiki.azurewebsites.net/rpaas/rpaasextensionapi.html#resourcepostaction\r\n            \r\nThe resource provider MUST return 200 to indicate that the operation completed successfully synchronously.\r\n            \r\nIf the create request cannot be fulfilled quickly, the RP MUST return 202 Accpeted with a non-terminal provisioning state to indicate the operation has not completed.More details about async work flow.\r\n            \r\nThe response body will be specific to the resource provider and the action, but it must adhere to the REST CEC guidelines and be JSON by default. Both response body and status code will be forwarded to ARM.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "actionName",
            "description": "The name of the action being called.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "The input data to the action being called, which may be null.",
            "schema": {
              "description": "The input data to the action being called, which may be null.",
              "type": "object",
              "additionalProperties": { }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceDeletionValidate": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "Extension point to validate if this resource can be deleted.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "the resource request context.",
            "schema": {
              "$ref": "#/definitions/WorkloadMetadataResourceRequestContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.HpcWorkbench/instances/{resourceName}/chambers/{childResourceName}/workloads/{grandchildResourceName}/resourceDeletionCompleted": {
      "post": {
        "tags": [
          "Workload"
        ],
        "summary": "This extension can be leveraged to perform some operation after a successful delete.",
        "parameters": [
          {
            "in": "path",
            "name": "subscriptionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "childResourceName",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "grandchildResourceName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "RPaaS"
            ]
          }
        ]
      }
    }
  },
  "definitions": {
    "ArmId": {
      "description": "Structure that represents the components of an ARM Resource Identifier.",
      "type": "string"
    },
    "ResourceRequestAction": {
      "enum": [
        "Unknown",
        "ResourceCreationValidate",
        "ResourceCreationBegin",
        "ResourceCreationCompleted",
        "ResourceReadValidate",
        "ResourceReadBegin",
        "ResourcePatchValidate",
        "ResourcePatchBegin",
        "ResourcePatchCompleted",
        "ResourceDeletionValidate",
        "ResourceDeletionBegin",
        "ResourceDeletionCompleted",
        "ResourcePostAction"
      ],
      "type": "string"
    },
    "AzureRegion": {
      "description": "Handles Azure Region strings by parsing either key (e.g eastus) or friendly name (e.g. East US).",
      "type": "string"
    },
    "ChamberLicenseMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ]
    },
    "AddressFamily": {
      "enum": [
        "Unspecified",
        "Unix",
        "InterNetwork",
        "ImpLink",
        "Pup",
        "Chaos",
        "Ipx",
        "Iso",
        "Ecma",
        "DataKit",
        "Ccitt",
        "Sna",
        "DecNet",
        "DataLink",
        "Lat",
        "HyperChannel",
        "AppleTalk",
        "NetBios",
        "VoiceView",
        "FireFox",
        "Banyan",
        "Atm",
        "InterNetworkV6",
        "Cluster",
        "Ieee12844",
        "Irda",
        "NetworkDesigners",
        "Max",
        "Packet",
        "ControllerAreaNetwork",
        "Unknown"
      ],
      "type": "string"
    },
    "CidrBlock": {
      "description": "this is an extension of IPAddress which includes logic related to Classes Interdomain Routing (CIDR) formatted IP Addresses.  \r\nE.g. 192.168.0.0/24, most people's default class C RFC 1918 IP space for their home router",
      "type": "string"
    },
    "ChamberUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "description": "Gets or sets AadUser name",
          "type": "string"
        },
        "isAdmin": {
          "description": "Gets or sets whether user is admin user to consortium or chamber.",
          "type": "boolean"
        },
        "principalName": {
          "description": "Gets or sets prinicipal name.",
          "type": "string"
        },
        "linuxUserName": {
          "description": "Gets or sets Linux user name, it will be user email id.",
          "type": "string"
        }
      }
    },
    "CliVirtualMachine": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.Name value for Gui Access Type.",
          "type": "string"
        },
        "id": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.Id value for Gui Access Type.",
          "type": "string"
        },
        "status": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.Status value for Gui Access Type.",
          "type": "string"
        },
        "imageId": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.ImageId value for Gui Access Type.",
          "type": "string"
        },
        "networkSecurityGroupId": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.NetworkSecurityGroupId value for Gui Access Type.",
          "type": "string"
        },
        "networkInterfaceId": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.NetworkInterfaceId value for Gui Access Type.",
          "type": "string"
        },
        "diagnosticsUri": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.DiagnosticsUri value for Gui Access Type.",
          "type": "string"
        },
        "userAssignedIdentityId": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.UserAssignedIdentityId value for Gui Access Type.",
          "type": "string"
        },
        "consortiumGuid": {
          "description": "Gets or sets the Microsoft.Sdw.Core.Models.CliVirtualMachine.ConsortiumGuid value for Gui Access Type.",
          "type": "string"
        }
      }
    },
    "ChamberMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "privateStorage": {
          "type": "string"
        },
        "vmSize": {
          "type": "string"
        },
        "osImage": {
          "type": "string"
        },
        "cycleCloudEnabled": {
          "type": "boolean"
        },
        "hpcCacheEnabled": {
          "type": "boolean"
        },
        "schedulerType": {
          "type": "string"
        },
        "userInterfaceMode": {
          "type": "string"
        },
        "simultaneousAccessRestriction": {
          "type": "boolean"
        },
        "chamberNumber": {
          "format": "int32",
          "type": "integer"
        },
        "allowedIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressSpace": {
          "$ref": "#/definitions/CidrBlock"
        },
        "chamberUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChamberUser"
          }
        },
        "cliVirtualMachines": {
          "$ref": "#/definitions/CliVirtualMachine"
        },
        "diagnosticStoragePrivateEndpointId": {
          "$ref": "#/definitions/ArmId"
        },
        "dataPipelinePrivateEndpointId": {
          "$ref": "#/definitions/ArmId"
        },
        "appServicePlanId": {
          "$ref": "#/definitions/ArmId"
        },
        "functionAppId": {
          "$ref": "#/definitions/ArmId"
        },
        "licenseServerVirtualMachineId": {
          "$ref": "#/definitions/ArmId"
        },
        "dataInStorageAccountId": {
          "$ref": "#/definitions/ArmId"
        },
        "dataSyncVirtualMachineId": {
          "$ref": "#/definitions/ArmId"
        },
        "netAppAccountId": {
          "$ref": "#/definitions/ArmId"
        }
      }
    },
    "ChamberStorageMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "chamberStorageNetAppAccount": {
          "$ref": "#/definitions/ArmId"
        },
        "chamberStorageNetAppCapacityPool": {
          "$ref": "#/definitions/ArmId"
        },
        "chamberStorageNetAppVolume": {
          "$ref": "#/definitions/ArmId"
        }
      }
    },
    "ConsortiumUser": {
      "description": "Model class represents AadUser details.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Gets or sets AadUser object Id.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets AadUser name",
          "type": "string"
        },
        "isAdmin": {
          "description": "Gets or sets whether user is admin user to consortium or chamber.",
          "type": "boolean"
        },
        "principalName": {
          "description": "Gets or sets prinicipal name.",
          "type": "string"
        },
        "linuxUserName": {
          "description": "Gets or sets Linux user name, it will be user email id.",
          "type": "string"
        }
      }
    },
    "ConsortiumMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "privateStorage": {
          "type": "string"
        },
        "vmSize": {
          "type": "string"
        },
        "osImage": {
          "type": "string"
        },
        "cycleCloudEnabled": {
          "type": "boolean"
        },
        "hpcCacheEnabled": {
          "type": "boolean"
        },
        "schedulerType": {
          "type": "string"
        },
        "userInterfaceMode": {
          "type": "string"
        },
        "simultaneousAccessRestriction": {
          "type": "boolean"
        },
        "chamberNumber": {
          "format": "int32",
          "type": "integer"
        },
        "allowedPublicIps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "addressSpace": {
          "$ref": "#/definitions/CidrBlock"
        },
        "consortiumUsers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsortiumUser"
          }
        },
        "cliVirtualMachines": {
          "$ref": "#/definitions/CliVirtualMachine"
        }
      }
    },
    "DataFileRequestMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ]
    },
    "DataPipelineMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ]
    },
    "LicenseServerMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ]
    },
    "SdwSku": {
      "type": "string"
    },
    "SdwInstanceMetadata": {
      "description": "The metadata representation of an SDW Instance.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "sku": {
          "$ref": "#/definitions/SdwSku"
        },
        "environment": {
          "description": "Gets or sets the Environment value.",
          "type": "string"
        },
        "instanceAddressSpace": {
          "$ref": "#/definitions/CidrBlock"
        }
      }
    },
    "SharedStorageMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ]
    },
    "WorkloadMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "vmSize": {
          "type": "string"
        },
        "edaType": {
          "type": "string"
        }
      }
    },
    "ProvisioningState": {
      "enum": [
        "Unknown",
        "Validating",
        "Processing",
        "Deleting",
        "Accepted",
        "Cancelled",
        "Completed",
        "Succeeded",
        "Failed"
      ],
      "type": "string"
    },
    "SdwResourceMetadata": {
      "description": "Base type for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "internalMetadata1": {
          "description": "Internal Metadata of our resource.",
          "type": "object",
          "additionalProperties": { }
        },
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "AccessProfileMetadata": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/SdwResourceMetadata"
        }
      ],
      "properties": {
        "consortiumId": {
          "$ref": "#/definitions/ArmId"
        }
      }
    },
    "ISdwResourceMetadata": {
      "description": "base interface for SDW resource metadata.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "$ref": "#/definitions/ProvisioningState"
        }
      }
    },
    "AccessProfileMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/AccessProfileMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "AuditEventField": {
      "type": "object",
      "properties": {
        "callerDisplayName": {
          "type": "string"
        },
        "callerIpAddress": {
          "type": "string"
        },
        "isCallerAnApplication": {
          "type": "boolean"
        },
        "correlationId": {
          "type": "string"
        }
      }
    },
    "AccessProfileMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/AccessProfileMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Error": {
      "description": "The error class.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Gets or sets the error code.",
          "type": "string"
        },
        "message": {
          "description": "Gets or sets the error message.",
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "description": "The error response.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Gets or sets the status of the request.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "AzureResource": {
      "description": "Generic Azure Resource Wrapper for dynamic resources (i.e. not ones we define).",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAzureResource"
        }
      ],
      "properties": {
        "properties": {
          "description": "Gets or sets the resource specific Properties.",
          "type": "object",
          "additionalProperties": { }
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AzureResource"
          }
        }
      }
    },
    "BaseAzureResource": {
      "description": "The base information available on All Azure Resources",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        }
      }
    },
    "TSdwResourceMetadata": {
      "type": "object"
    },
    "AzureResource`1": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/BaseAzureResource"
        }
      ],
      "properties": {
        "properties": {
          "$ref": "#/definitions/TSdwResourceMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "ChamberMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/ChamberMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "ChamberMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/ChamberMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ChamberLicenseMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/ChamberLicenseMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "ChamberLicenseMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/ChamberLicenseMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ConsortiumMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/ConsortiumMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "ConsortiumMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/ConsortiumMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DataFileRequestMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/DataFileRequestMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "DataFileRequestMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/DataFileRequestMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SdwInstanceMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/SdwInstanceMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "SdwInstanceMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/SdwInstanceMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "SharedStorageMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/SharedStorageMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "SharedStorageMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/SharedStorageMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WorkloadMetadataAzureResource": {
      "description": "Generic Azure Resource Wrapper for SDW Resource Metadata.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "Gets or sets the API Version.",
          "type": "string"
        },
        "id": {
          "$ref": "#/definitions/ArmId"
        },
        "name": {
          "description": "Gets or sets the Name.",
          "type": "string",
          "readOnly": true
        },
        "type": {
          "description": "Gets or sets the Type.",
          "type": "string",
          "readOnly": true
        },
        "sku": {
          "description": "Gets or sets the SKU.",
          "type": "string"
        },
        "kind": {
          "description": "Gets or sets the Kind.",
          "type": "string"
        },
        "managedBy": {
          "description": "Gets or sets the Manged By value.",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/AzureRegion"
        },
        "zones": {
          "description": "Gets or sets the Zones.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "plan": {
          "description": "Gets or sets the Plan.",
          "type": "object",
          "additionalProperties": { }
        },
        "tags": {
          "description": "Gets or sets the Tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scale": {
          "description": "Gets or sets the Scale.",
          "type": "object",
          "additionalProperties": { }
        },
        "identity": {
          "description": "Gets or sets the Identity.",
          "type": "object",
          "additionalProperties": { }
        },
        "properties": {
          "$ref": "#/definitions/WorkloadMetadata"
        },
        "resources": {
          "description": "Gets or sets the nested resources of this resource",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ISdwResourceMetadata"
          }
        }
      }
    },
    "WorkloadMetadataResourceRequestContext": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "#/definitions/ArmId"
        },
        "apiVersion": {
          "description": "Gets the ApiVersion of the request.",
          "type": "string",
          "readOnly": true
        },
        "action": {
          "$ref": "#/definitions/ResourceRequestAction"
        },
        "isNewResourceRequest": {
          "type": "boolean"
        },
        "resource": {
          "$ref": "#/definitions/WorkloadMetadataAzureResource"
        },
        "operationStatusId": {
          "$ref": "#/definitions/ArmId"
        },
        "auditEventField": {
          "$ref": "#/definitions/AuditEventField"
        },
        "callerDisplayName": {
          "description": "Gets the Caller display name.",
          "type": "string",
          "readOnly": true
        },
        "isCallerAnApplication": {
          "description": "Gets a value indicating {true} if the caller is an application, otherswise {false}.",
          "type": "boolean",
          "readOnly": true
        },
        "callerIpAddress": {
          "type": "string",
          "readOnly": true
        },
        "correlationId": {
          "type": "string",
          "readOnly": true
        }
      }
    }
  },
  "securityDefinitions": {
    "azure_auth": { }
  },
  "tags": [
    {
      "name": "AccessProfile",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "Chamber",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "ChamberLicenses",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "Consortium",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "DataFileRequest",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "SdwInstances",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "SharedStorage",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    },
    {
      "name": "Workload",
      "description": "Controller class which handles calls to SDW Instance RPaaS extensions."
    }
  ]
}